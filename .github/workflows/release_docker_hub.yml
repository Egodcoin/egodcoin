name: Release to Docker Hub

on:
  release:
    types: [published]

jobs:
  release:
    name: Release to Docker Hub
    runs-on: ubuntu-22.04
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Set raw tag
      id: get_tag
      run: |
        TAG=${{ github.event.release.tag_name }}
        echo "build_tag=${TAG#v}" >> $GITHUB_OUTPUT

    - name: Set suffix
      uses: actions/github-script@v6
      id: suffix
      with:
        result-encoding: string
        script: |
          const fullTag = '${{ github.event.release.tag_name }}';
          if (fullTag.includes('-')) {
            const [, fullSuffix] = fullTag.split('-');
            const [suffix] = fullSuffix.split('.');
            return `-${suffix}`;
          } else {
            return '';
          }

    - name: Set Docker tags and labels
      id: docker_meta
      uses: docker/metadata-action@v4
      with:
        images: dashpay/dashd
        tags: |
          type=match,pattern=v(\d+.\d+.\d+.\d+),group=1,enable=${{ !contains(github.event.release.tag_name, '-rc') }}
          type=match,pattern=v(\d+.\d+.\d+),group=1,enable=${{ !contains(github.event.release.tag_name, '-rc') }}
          type=match,pattern=v(\d+.\d+),group=1,enable=${{ !contains(github.event.release.tag_name, '-rc') }}
          type=raw,value=latest,enable=${{ !contains(github.event.release.tag_name, '-rc') }}
          type=match,pattern=v(.*),group=1,latest=false,enable=${{ contains(github.event.release.tag_name, '-rc') }}
          type=raw,value=latest-dev,enable=${{ contains(github.event.release.tag_name, '-rc') }}
        flavor: |
          latest=false

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./docker
        file: ./docker/Dockerfile.GitHubActions
        push: true
        tags: ${{ steps.docker_meta.outputs.tags }}
        labels: ${{ steps.docker_meta.outputs.labels }}
        build-args: TAG=${{ steps.docker_meta.outputs.version }}
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache-new
        platforms: linux/amd64,linux/arm64,linux/arm/v7

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
